/**
 * Copyright (c) Microsoft Corporation.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { BrowserContext } from '../browserContext';
import { Page } from '../page';
import { Protocol } from './protocol';
import { WKSession } from './wkConnection';
export declare class WKPageProxy {
    private readonly _pageProxySession;
    readonly _browserContext: BrowserContext;
    private readonly _openerResolver;
    private _pagePromise;
    private _wkPage;
    private readonly _firstTargetPromise;
    private _firstTargetCallback?;
    private _pagePausedOnStart;
    private readonly _sessions;
    private readonly _eventListeners;
    constructor(pageProxySession: WKSession, browserContext: BrowserContext, openerResolver: () => (WKPageProxy | null));
    didClose(): void;
    dispose(): void;
    dispatchMessageToSession(message: any): void;
    private _isProvisionalCrossProcessLoadInProgress;
    handleProvisionalLoadFailed(event: Protocol.Browser.provisionalLoadFailedPayload): void;
    page(): Promise<Page>;
    existingPage(): Page | undefined;
    onPopupCreated(popupPageProxy: WKPageProxy): void;
    private _initializeWKPage;
    private _onTargetCreated;
    private _resumeTarget;
    private _onTargetDestroyed;
    private _onDispatchMessageFromTarget;
    private _onDidCommitProvisionalTarget;
}
