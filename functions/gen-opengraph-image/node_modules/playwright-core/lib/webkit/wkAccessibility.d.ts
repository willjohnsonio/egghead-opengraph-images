/**
 * Copyright (c) Microsoft Corporation.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import * as accessibility from '../accessibility';
import { WKSession } from './wkConnection';
import { Protocol } from './protocol';
import * as dom from '../dom';
export declare function getAccessibilityTree(session: WKSession, needle?: dom.ElementHandle): Promise<{
    tree: WKAXNode;
    needle: WKAXNode | null;
}>;
declare class WKAXNode implements accessibility.AXNode {
    private _payload;
    private _children;
    constructor(payload: Protocol.Page.AXNode);
    children(): WKAXNode[];
    _findNeedle(): WKAXNode | null;
    isControl(): boolean;
    _isTextControl(): boolean;
    _name(): string;
    isInteresting(insideControl: boolean): boolean;
    _hasRendundantTextChild(): boolean;
    isLeafNode(): boolean;
    serialize(): accessibility.SerializedAXNode;
}
export {};
