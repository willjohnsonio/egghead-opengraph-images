/**
 * Copyright 2017 Google Inc. All rights reserved.
 * Modifications copyright (c) Microsoft Corporation.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
declare type ParamsGetter = (platform: string, revision: string) => {
    downloadUrl: string;
    executablePath: string;
};
export declare type OnProgressCallback = (downloadedBytes: number, totalBytes: number) => void;
export declare class BrowserFetcher {
    private _downloadsFolder;
    private _platform;
    private _preferredRevision;
    private _params;
    constructor(downloadsFolder: string, platform: string, preferredRevision: string, params: ParamsGetter);
    canDownload(revision?: string): Promise<boolean>;
    download(revision?: string, progressCallback?: OnProgressCallback): Promise<BrowserFetcherRevisionInfo>;
    localRevisions(): Promise<string[]>;
    remove(revision?: string): Promise<void>;
    revisionInfo(revision?: string): BrowserFetcherRevisionInfo;
    _getFolderPath(revision: string): string;
}
export declare type BrowserFetcherOptions = {
    platform?: string;
    path?: string;
    host?: string;
};
export declare type BrowserFetcherRevisionInfo = {
    folderPath: string;
    executablePath: string;
    url: string;
    local: boolean;
    revision: string;
};
export {};
