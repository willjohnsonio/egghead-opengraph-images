/**
 * Copyright 2019 Google Inc. All rights reserved.
 * Modifications copyright (c) Microsoft Corporation.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { CRBrowser } from './crBrowser';
import { BrowserContext } from '../browserContext';
import { CRSession } from './crConnection';
import { Page, Worker } from '../page';
import { Protocol } from './protocol';
import { CRPage } from './crPage';
export declare class CRTarget {
    private _targetInfo;
    private readonly _browser;
    private readonly _browserContext;
    readonly _targetId: string;
    private _sessionFactory;
    private _pagePromise;
    _crPage: CRPage | null;
    private _workerPromise;
    readonly _initializedPromise: Promise<boolean>;
    _initializedCallback: (success: boolean) => void;
    _isInitialized: boolean;
    static fromPage(page: Page): CRTarget;
    constructor(browser: CRBrowser, targetInfo: Protocol.Target.TargetInfo, browserContext: BrowserContext, sessionFactory: () => Promise<CRSession>);
    _didClose(): void;
    page(): Promise<Page | null>;
    _worker(): Promise<Worker | null>;
    url(): string;
    type(): 'page' | 'background_page' | 'service_worker' | 'shared_worker' | 'other' | 'browser';
    context(): BrowserContext;
    opener(): CRTarget | null;
    createCDPSession(): Promise<CRSession>;
    _targetInfoChanged(targetInfo: Protocol.Target.TargetInfo): void;
}
